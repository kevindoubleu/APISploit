from celery import shared_task
from pentest.helpers.utils import RequestWrapper, finishTest
from pentest.models import Payload
import re

@shared_task
def IDORTest(url, test_id, request_method, headers, data_format, body, payload_type, wordlist):
    pl_and_urls = {}

    # generate wordlist
    if payload_type == "numbers":
        from_to_step = [int(i) for i in wordlist.split(",")]
        pl_and_urls = dict.fromkeys(
            [i for i in range(from_to_step[0], from_to_step[1]+1, from_to_step[2])]
        )
    elif payload_type == "wordlist":
        pl_and_urls = dict.fromkeys(
            wordlist.split("\n")
        )

    # generate urls from wordlist
    for key in pl_and_urls:
        # https://stackoverflow.com/questions/9306202/
        pl_and_urls[key] = re.sub(r"(?<!\\)~", str(key), url)

    print(pl_and_urls)
    # request the urls
    for i, (pl, url_with_pl) in enumerate(pl_and_urls.items()):
        req = RequestWrapper(url_with_pl, request_method, headers, data_format, body)
        print(url_with_pl)
        # detect result
        if req.request.status_code == 200:
            req.saveRequestAsPayload(
                payload_string = f"Request successful with payload {pl}",
                test_id = test_id
            )

    finishTest(test_id)
