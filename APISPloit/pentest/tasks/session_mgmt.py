from celery import shared_task
import requests,json
from pentest.models import Test, Payload
from urllib.parse import urlparse
from datetime import datetime
from time import sleep
from pentest.helpers.utils import RequestWrapper, finishTest

@shared_task
def SessionManagementTest(url, test_id, request_method, headers, data_format, body, riskLevel):
    if riskLevel == "low":
        print("masuk low")
        initial_req = RequestWrapper(url, request_method, headers, data_format, body)
        sleep(60 * 30)
        second_req = RequestWrapper(url, request_method, headers, data_format, body)
    else:
        initial_req = RequestWrapper(url, request_method, headers, data_format, body)
        sleep(60 * 5)
        second_req = RequestWrapper(url, request_method, headers, data_format, body)

    if initial_req.request.text == second_req.request.text or \
        second_req.request.status_code == 200:
        if riskLevel == "low":
            second_req.saveRequestAsPayload(
                payload_string = "Session is not expired after 30 minutes",
                test_id = test_id
            )
        else:
            second_req.saveRequestAsPayload(
                payload_string = "Session is not expired after 5 minutes",
                test_id = test_id
            )

    finishTest(test_id)
