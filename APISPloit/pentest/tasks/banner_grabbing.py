from celery import shared_task
from pentest.models import Test, Payload
from datetime import datetime
import requests
from requests.structures import CaseInsensitiveDict
import re
import json

@shared_task
def BannerGrabbingTest(url, test_id):
    r = requests.get(url)
    headers = CaseInsensitiveDict(r.headers)

    possible_banners = ''.join([
        r.headers.get("server", ""),
        r.headers.get("x-powered-by", ""),
        r.headers.get("x-aspnet-version", ""),
        r.headers.get("x-aspnetmvc-version", ""),
    ])

    pattern = r"[a-zA-Z]"
    if re.search(pattern, possible_banners):
        Payload.objects.create(
            payload_string = "Banner grabbing is possible",
            test_id = test_id,
            request_header = str(json.dumps(dict(r.request.headers))),
            response_header = str(json.dumps(dict(r.headers))),
            response_body = str(r.text))

    Test.objects.filter(pk=test_id).update(end_time=datetime.now())
    